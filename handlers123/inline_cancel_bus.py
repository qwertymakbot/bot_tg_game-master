import json
import os

from bot import Dispatcher, database, types, username, username_2
from create_bot import bot


async def cancel_yes(callback: types.CallbackQuery):
    try:
        with open(f'{os.getcwd()}/game/cancel_bus/{callback.from_user.id}.json', 'r', encoding='utf-8') as f:
            data = json.load(f)
            f.close()
            user_info = database.users.find_one({'id': callback.from_user.id})
            # –í—ã—á–µ—Ç —Ä–µ—Å—É—Ä—Å–æ–≤ —Å–æ —Å—á–µ—Ç–∞ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞
            country_info = database.contries.find_one({'country': user_info['citizen_country']})
            database.contries.update_one({'country': user_info["citizen_country"]}, {'$set':{'oil': country_info['oil'] - data['oil']/2,
                                                                                             'food': country_info['food'] - data['food']/2,
                                                                                             'cash': country_info['cash'] - data['cost']/2}})
            # –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å
            database.users.update_one({'id': callback.from_user.id}, {'$set': {'oil': user_info['oil']+ data['oil']/2,
                                                                               'food': user_info['food']+ data['food']/2,
                                                                               'cash': user_info['cash']+ data['cost']/2}})
            # –í—ã–¥–∞—á–∞ –ø–æ–ª –ó–ü —Å—Ç—Ä–æ–∏—Ç–µ–ª—è–º
            amount = 0
            if len(data['builders']) != 0:  # –ï—Å–ª–∏ –µ—Å—Ç—å —Å—Ç—Ä–æ–∏—Ç–µ–ª–∏
                builders_username = []
                for builder in data['builders']:
                    builder_info = database.users.find_one({'id': builder})
                    amount = amount + data['builder_pay'] / 2
                    # –í—ã—á–µ—Ç –∏–∑ –±–∞–ª–∞–Ω—Å–∞ –∑–∞–∫–∞–∑—á–∏–∫–∞
                    database.users.update_one({'id': callback.from_user.id}, {'$set': {'cash': user_info['cash'] - data['builder_pay']/2}})
                    # –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ –Ω–∞ –±–∞–ª–∞–Ω—Å —Å—Ç—Ä–æ–∏—Ç–µ–ª—è
                    database.users.update_one({'id': builder},
                                              {'$set': {'cash': builder_info['cash'] + data['builder_pay'] / 2}})
                    # –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª–µ–π –∏–∑ –ë–î
                    database.builders_work.delete_one({'builder': builder})
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–∏–∫–∞ –≤ —Å–ø–∏—Å–æ–∫
                    builders_username.append(f'{await username_2(builder, builder_info["username"])}')
                    # –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–π–∫–∏ build_bus
                    os.remove(f'{os.getcwd()}/game/build_bus/{callback.from_user.id}.json')
                await bot.send_message(callback.message.chat.id, text=f'{await username(callback)}, –≤–∞—à–∞ —Å—Ç—Ä–æ–π–∫–∞ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞!\n'
                                       f'‚öôÔ∏è –í–∞–º –±—ã–ª–æ –Ω–∞—á–∏—Å–ª–µ–Ω–æ —Å–ª–µ–¥—É—é—â–µ–µ:\n'
                                       f'üñ§ –ù–µ—Ñ—Ç—å: +{round(data["oil"] / 2)}–ª\n'
                                       f'üçî –ï–¥–∞: +{round(data["food"] / 2)}–∫–≥\n'
                                       f'üí∞ –î–µ–Ω—å–≥–∏: +{round(data["cost"] / 2)}$\n'
                                       f'üí∏ –°—Ç—Ä–æ–∏—Ç–µ–ª—è–º —Å—É–º–º–∞—Ä–Ω–æ –±—ã–ª–æ –Ω–∞—á–∏—Å–ª–µ–Ω–æ: +{round(amount)}$\n'
                                       f'{"".join(builders_username)}', parse_mode='HTML')
            else:
                pass
    except:
        await callback.answer(f'{await username(callback)}, —ç—Ç–æ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–æ –Ω–µ –í–∞–º!', parse_mode='HTML')


async def cancel_no(callback: types.CallbackQuery):
    try:
        os.remove(f'{os.getcwd()}/game/cancel_bus/{callback.from_user.id}.json')
        await callback.answer(f'{await username(callback)}, –≤–∞—à–µ —Ä–µ—à–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ!', parse_mode='HTML')
    except:
        await callback.answer(f'{await username(callback)}, —ç—Ç–æ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–æ –Ω–µ –í–∞–º!', parse_mode='HTML')


def register_handlers_cancel_bus(dp: Dispatcher):
    dp.register_callback_query_handler(cancel_yes, text='–°—Ç—Ä–æ–π–∫–∞_–æ—Ç–º–µ–Ω–∞_–¥–∞')
    dp.register_callback_query_handler(cancel_no, text='–°—Ç—Ä–æ–π–∫–∞_–æ—Ç–º–µ–Ω–∞_–Ω–µ—Ç')
