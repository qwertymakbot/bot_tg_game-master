from bot import check_user, types, InlineKeyboardButton, InlineKeyboardMarkup, database, bot, username, Dispatcher


# –°–ø–∏—Å–æ–∫ –º–∞—à–∏–Ω
async def cars(callback: types.CallbackQuery):
    await check_user(callback)
    key = InlineKeyboardMarkup(2)
    user_info = database.users.find_one({'id': callback.from_user.id})
    if user_info['citizen_country'] != '–Ω–µ—Ç':
        cars_list = list(database.cars.find({'country': user_info['citizen_country']}))
        for i in range(0, len(cars_list)):
            car = InlineKeyboardButton(text=f'{cars_list[i]["name_car"]} –¶–µ–Ω–∞: {cars_list[i]["cost"]}$',
                                       callback_data=f'shop_{cars_list[i]["name_car"]}')
        
            key.add(car)
        await bot.send_message(callback.message.chat.id,
                               text=f'{await username(callback)}, –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –º–∞—à–∏–Ω—ã!', reply_markup=key,
                               parse_mode='HTML')
    else:
        await bot.send_message(callback.message.chat.id,
                               text=f'{await username(callback)}, –≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–æ–º (/citizen)',
                               parse_mode='HTML')


# /shop –ú–∞–≥–∞–∑–∏–Ω

async def shop(message):
    await check_user(message)
    user_info = database.users.find_one({'id': message.from_user.id})
    if user_info["citizen_country"] != '–Ω–µ—Ç':  # –ï—Å–ª–∏ –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω
        key = types.InlineKeyboardMarkup(row_width=1)
        # –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –º–∞–≥–∞–∑–∏–Ω–µ
        cars = types.InlineKeyboardButton(text='–ú–∞—à–∏–Ω—ã üöó', callback_data='–ú–∞–≥–∞–∑–∏–Ω_–º–∞—à–∏–Ω—ã')
        cases = types.InlineKeyboardButton(text='–ö–µ–π—Å—ã üéÅ', callback_data='–ö–µ–π—Å—ã')
        marketplace = InlineKeyboardButton(text='–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å', callback_data='marketplace_')
        key.add(cars, cases, marketplace)

        await bot.send_message(message.chat.id,
                               text=f'@{message.from_user.username}, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!', reply_markup=key)

    else:
        await message.answer(
            f'@{message.from_user.username}, –¥–ª—è –Ω–∞—á–∞–ª–∞ –≤–∞–º –Ω—É–∂–Ω–æ —Å—Ç–∞—Ç—å –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–æ–º –∫–∞–∫–æ–π-–ª–∏–±–æ —Å—Ç—Ä–∞–Ω—ã! (/citizen)')

def register_handlers_shop(dp: Dispatcher):
    dp.register_callback_query_handler(cars, text='–ú–∞–≥–∞–∑–∏–Ω_–º–∞—à–∏–Ω—ã')
    dp.register_message_handler(shop, text='–ú–∞–≥–∞–∑–∏–Ω')
