from bot import bot, Dispatcher, database, check_user, username, types, InputFile, InlineKeyboardButton, \
    InlineKeyboardMarkup, username_2
import os


# /get_citizen –í–∑—è—Ç—å —Å–µ–±–µ –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞
async def get_citizen(message: types.Message):
    await check_user(message)
    if message.reply_to_message:
        president_info = database.users.find_one({'id': message.from_user.id})
        if president_info['president_country'] != '–Ω–µ—Ç':  # –ï—Å–ª–∏ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç —Å—Ç—Ä–∞–Ω—ã
            user_info = database.users.find_one({'id': message.reply_to_message.from_user.id})
            if user_info['citizen_country'] == '–Ω–µ—Ç':  # –ï—Å–ª–∏ –Ω–µ –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω
                citizens = database.users.find({'citizen_country': president_info['president_country']})

                country_info = database.countries.find_one({'country': president_info['president_country']})
                if len(list(citizens)) < country_info['max_people']:  # –ï—Å–ª–∏ –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–æ–≤ –º–µ–Ω—å—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ
                    key = types.InlineKeyboardMarkup()
                    but_yes = types.InlineKeyboardButton(text='–°–æ–≥–ª–∞—Å–∏—Ç—å—Å—è',
                                                         callback_data=f'–ì—Ä_–¥–∞_{message.from_user.id}_{message.reply_to_message.from_user.id}_{president_info["president_country"]}')
                    but_no = types.InlineKeyboardButton(text='–û—Ç–∫–∞–∑–∞—Ç—å—Å—è',
                                                        callback_data=f'–ì—Ä_–Ω–µ—Ç_{message.from_user.id}_{message.reply_to_message.from_user.id}_{president_info["president_country"]}')
                    key.add(but_no, but_yes)
                    await bot.send_message(message.chat.id,
                                           text=f'–í–Ω–∏–º–∞–Ω–∏–µ, {await username(message.reply_to_message)}, –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç —Å—Ç—Ä–∞–Ω—ã {president_info["president_country"]} —Ö–æ—á–µ—Ç —Å–¥–µ–ª–∞—Ç—å –≤–∞—Å –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–æ–º —Å–≤–æ–µ–π —Å—Ç—Ä–∞–Ω—ã',
                                           reply_markup=key, parse_mode='HTML')
                else:
                    await bot.send_message(message.chat.id,
                                           f'{await username(message)}, –≤ –≤–∞—à–µ–π —Å—Ç—Ä–∞–Ω–µ –º–∞–∫—Å–∏–º—É–º –Ω–∞—Å–µ–ª–µ–Ω–∏—è!',
                                           parse_mode='HTML')
            else:
                await bot.send_message(message.chat.id,
                                       f'{await username(message.reply_to_message)} —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–æ–º —Å—Ç—Ä–∞–Ω—ã!',
                                       parse_mode='HTML')


# /mycitizens –ì—Ä–∞–∂–¥–∞–Ω–µ —Å—Ç—Ä–∞–Ω—ã
async def mycitizens(message):
    await message.delete()
    data = []
    president_info = database.users.find_one({'id': message.from_user.id})
    if president_info['president_country'] != '–Ω–µ—Ç':
        citizens = list(database.users.find({'citizen_country': president_info['president_country']}))
        if len(citizens) <= 1:
            await bot.send_message(message.chat.id,
                                   f'{await username(message)}, —É –≤–∞—Å –Ω–µ—Ç –≥—Ä–∞–∂–¥–∞–Ω\n'
                                   f'–ß—Ç–æ–±—ã –≤–∑—è—Ç—å –∫–æ–≥–æ-—Ç–æ, –Ω–∞–ø–∏—à–∏—Ç–µ "–í–∑—è—Ç—å –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞" –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ',
                                   parse_mode='HTML')
        else:
            for i in range(0, len(citizens)):
                user_id = citizens[i]['id']
                userna = citizens[i]['username']
                data.append(f'{i + 1}. {await username_2(user_id, userna)} - {citizens[i]["job"]}\n')
            await bot.send_message(message.chat.id, f'üë®‚Äçüë©‚Äçüëß‚Äçüëß –°–ø–∏—Å–æ–∫ –≥—Ä–∞–∂–¥–∞–Ω {await username(message)}:\n' + ''.join(data),
                               parse_mode='HTML')


# /nalog –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞–ª–æ–≥ –¥–ª—è –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞
async def nalog(message):
    await message.delete()
    president_info = database.users.find_one({'id': message.from_user.id})
    if president_info['president_country'] != '–Ω–µ—Ç':
        nalog_amount = message.get_args().split()
        try:
            nalog = int(nalog_amount[0])
            if nalog <= 100 and nalog >= 0:
                database.countries.update_one({'country': president_info['president_country']},
                                              {'$set': {'nalog_job': nalog}})

                await bot.send_message(message.chat.id,
                                       f'–¢–µ–ø–µ—Ä—å –Ω–∞–ª–æ–≥ –Ω–∞ —Ä–∞–±–æ—Ç—É –≤ —Å—Ç—Ä–∞–Ω–µ {president_info["president_country"]} —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: {nalog}%')
            else:
                await bot.send_message(message.chat.id, f'–ù–∞–ª–æ–≥ –º–æ–∂–µ—Ç —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å –æ—Ç 0 –¥–æ 100')

        except:
            await bot.send_message(message.chat.id,
                                   f'{await username(message)}, –Ω–∞–ª–æ–≥ –≤–≤–æ–¥–∏—Ç—Å—è –ø–æ –ø—Ä–∏–º–µ—Ä—É /nalog 10 (–Ω–∞–ª–æ–≥ –±—É–¥–µ—Ç —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å 10%)',
                                   parse_mode='HTML')
    else:
        await bot.send_message(message.chat.id,
                               f'{await username(message)}, —Ç–æ–ª—å–∫–æ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç –º–æ–∂–µ—Ç —Ç–∞–∫', parse_mode='HTML')


# /ccash –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –¥–µ–Ω—å–≥–∞–º–∏ —Å—Ç—Ä–∞–Ω—ã
async def ccash(message: types.Message):
    await message.delete()
    president_info = database.users.find_one({'id': message.from_user.id})
    if president_info['president_country'] != '–Ω–µ—Ç':
        amount = message.get_args().split()
        try:
            if '-' in amount[0]:
                try:
                    cash = int(amount[0].replace('-', '', 1))
                    country_info = database.countries.find_one({'president': message.from_user.id})
                    if country_info['cash'] >= cash:
                        database.countries.update_one({'president': message.from_user.id},
                                                      {'$set': {'cash': country_info['cash'] - cash}})
                        database.users.update_one({'id': message.from_user.id}, {'$set': {'cash': president_info['cash'] + cash}})
                        await bot.send_message(message.chat.id,
                                               f'{await username(message)}, —É—Å–ø–µ—à–Ω–æ –≤–∑—è–ª –∏–∑ –∫–∞–∑–Ω—ã –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞ {cash}$ üí∞',
                                               parse_mode='HTML')
                    else:
                        await bot.send_message(message.chat.id,
                                               f'{await username(message)}, –≤ –∫–∞–∑–Ω–µ –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥ üí∞',
                                               parse_mode='HTML')
                except:
                    await bot.send_message(message.chat.id,
                                           f'{await username(message)}, –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–≤–µ–¥–µ–Ω–∞ —Å—É–º–º–∞ ‚ùå',
                                           parse_mode='HTML')

            elif '+' in amount[0]:
                try:
                    cash = int(amount[0].replace('+', '', 1))
                    country_info = database.countries.find_one({'president': message.from_user.id})
                    if president_info['cash'] >= cash:
                        database.countries.update_one({'president': message.from_user.id},
                                                      {'$set': {'cash': country_info['cash'] + cash}})
                        database.users.update_one({'id': message.from_user.id}, {'$set':  {'cash': president_info['cash'] - cash}})
                        await bot.send_message(message.chat.id,
                                               f'{await username(message)}, —É—Å–ø–µ—à–Ω–æ –ø–æ–ª–æ–∂–∏–ª –≤ –∫–∞–∑–Ω—É –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞ {cash}$ üí∞',
                                               parse_mode='HTML')
                    else:
                        await bot.send_message(message.chat.id,
                                               f'{await username(message)}, —É –≤–∞—Å –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥ üí∞',
                                               parse_mode='HTML')
                except:
                    await bot.send_message(message.chat.id,
                                           f'{await username(message)}, –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–≤–µ–¥–µ–Ω–∞ —Å—É–º–º–∞ ‚ùå',
                                           parse_mode='HTML')
            else:
                await bot.send_message(message.chat.id, f'/ccash +10 - –ª–æ–∂–∏—Ç –¥–µ–Ω—å–≥–∏ –≤ –∫–∞–∑–Ω—É üí∞\n'
                                                        f'/ccash -10 - –∑–∞–±–∏—Ä–∞–µ—Ç –¥–µ–Ω—å–≥–∏ –∏–∑ –∫–∞–∑–Ω—ã üí∞')
        except IndexError:
            await bot.send_message(message.chat.id, f'/ccash +10 - –ª–æ–∂–∏—Ç –¥–µ–Ω—å–≥–∏ –≤ –∫–∞–∑–Ω—É üí∞\n'
                                                    f'/ccash -10 - –∑–∞–±–∏—Ä–∞–µ—Ç –¥–µ–Ω—å–≥–∏ –∏–∑ –∫–∞–∑–Ω—ã üí∞')


# /cpass –û —Å—Ç—Ä–∞–Ω–µ –≤ –∫–æ—Ç–æ—Ä–æ–π —Ç—ã –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç
async def cpass(message):
    await check_user(message)
    president_info = database.users.find_one({'id': message.from_user.id})
    if president_info['president_country'] != '–Ω–µ—Ç':

        country_info = database.countries.find_one({'country': president_info['president_country']})

        citizens = database.users.find({'citizen_country': president_info['president_country']})
        await bot.send_photo(message.chat.id, photo=InputFile(
            f'{os.getcwd()}/res/country_pic/{president_info["president_country"]}.png'),
                             caption='üìë –û —Å—Ç—Ä–∞–Ω–µ: üìë\n'
                                     f'~{country_info["country"]}~\n'
                                     f'üë±‚Äç‚ôÇÔ∏è –ü—Ä–µ–∑–∏–¥–µ–Ω—Ç: {await username(message)}\n'
                                     f'üí∞ –î–µ–Ω—å–≥–∏ –≤ –∫–∞–∑–Ω–µ: {country_info["cash"]}$\n'
                                     f'üñ§ –ù–µ—Ñ—Ç—å: {country_info["oil"]} –ª–∏—Ç—Ä–æ–≤\n'
                                     f'üçî –ü–∏—â–∞: {country_info["food"]} –∫–≥\n'
                                     f'‚õì –¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è: {country_info["territory"]} –∫–º\n'
                                     f'üéñ –£—Ä–æ–≤–µ–Ω—å: {country_info["level"]}\n'
                                     f'üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –ù–∞—Å–µ–ª–µ–Ω–∏–µ: {len(list(citizens))} –∏–∑ {country_info["max_people"]} —á–µ–ª.\n'
                                     f'üßë‚Äçüåæ –¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è —Ñ–µ—Ä–º–µ—Ä–æ–≤: {country_info["terr_for_farmers"]} –∫–º\n'
                                     f'üíµ –ù–∞–ª–æ–≥ –Ω–∞ —Ä–∞–±–æ—Ç—É: {country_info["nalog_job"]}%\n'
                                     f'üí∏ –°—Ç–æ–∏–º–æ—Å—Ç—å: {country_info["cost"]} $\n', parse_mode='HTML')
    else:
        await bot.send_message(message.chat.id, f'{await username(message)}, –≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–º –∫–∞–∫–æ–π-–ª–∏–±–æ —Å—Ç—Ä–∞–Ω—ã', parse_mode='HTML')


# /sell_country –ü—Ä–æ–¥–∞–∂–∞ —Å—Ç—Ä–∞–Ω—ã
async def sell_country(message):
    await check_user(message)
    president_info = database.users.find_one({'id': message.from_user.id})

    if president_info['president_country'] != '–Ω–µ—Ç':
        country_info = database.countries.find_one({'country': president_info['president_country']})
        key = InlineKeyboardMarkup()
        but1 = InlineKeyboardButton('–î–∞',
                                    callback_data=f'sell_country_{message.from_user.id}_{president_info["president_country"]}_{round(country_info["cost"] * 0.1)}')
        but2 = InlineKeyboardButton('–ù–µ—Ç', callback_data=f'sell_country_no_{message.from_user.id}')
        key.add(but1, but2)
        await bot.send_message(message.chat.id,
                               f'{await username(message)}, –≤—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–∞—Ç—å {president_info["president_country"]}?\n'
                               f'–í—ã –ø–æ–ª—É—á–∏—Ç–µ {round(country_info["cost"] * 0.1)}$',
                               reply_markup=key, parse_mode='HTML')
    else:
        await bot.send_message(message.chat.id, f'{await username(message)}, –≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–º –∫–∞–∫–æ–π-–ª–∏–±–æ —Å—Ç—Ä–∞–Ω—ã', parse_mode='HTML')


def register_handlers_get_citizen(dp: Dispatcher):
    dp.register_message_handler(get_citizen, content_types='text',
                                text=['/get_citizen', '–í–∑—è—Ç—å –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞', '–≤–∑—è—Ç—å –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞'])
    dp.register_message_handler(nalog, commands='nalog')
    dp.register_message_handler(mycitizens,
                                text=['–ú–æ–∏ –≥—Ä–∞–∂–¥–∞–Ω–µ', '–º–æ–∏ –≥—Ä–∞–∂–¥–∞–Ω–µ', '–ì—Ä–∞–∂–¥–∞–Ω–µ', '–≥—Ä–∞–∂–¥–∞–Ω–µ', '/mycitizens'])
    dp.register_message_handler(ccash, commands='ccash')
    dp.register_message_handler(cpass, content_types='text',
                                text=['–û —Å—Ç—Ä–∞–Ω–µ', '–æ —Å—Ç—Ä–∞–Ω–µ', '–º–æ—è —Å—Ç—Ä–∞–Ω–∞', '–ú–æ—è —Å—Ç—Ä–∞–Ω–∞', '/cpass'])
    dp.register_message_handler(sell_country, content_types='text',
                                text=['/sell_country', '–ü—Ä–æ–¥–∞—Ç—å —Å—Ç—Ä–∞–Ω—É', '–ø—Ä–æ–¥–∞—Ç—å —Å—Ç—Ä–∞–Ω—É'])
